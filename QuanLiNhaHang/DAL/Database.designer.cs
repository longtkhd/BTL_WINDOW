#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CSDLNhaHang")]
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietHoaDonlinq(ChiTietHoaDonlinq instance);
    partial void UpdateChiTietHoaDonlinq(ChiTietHoaDonlinq instance);
    partial void DeleteChiTietHoaDonlinq(ChiTietHoaDonlinq instance);
    partial void InsertNhanVienlinq(NhanVienlinq instance);
    partial void UpdateNhanVienlinq(NhanVienlinq instance);
    partial void DeleteNhanVienlinq(NhanVienlinq instance);
    partial void InsertHangLinq(HangLinq instance);
    partial void UpdateHangLinq(HangLinq instance);
    partial void DeleteHangLinq(HangLinq instance);
    partial void InsertHoaDonlinq(HoaDonlinq instance);
    partial void UpdateHoaDonlinq(HoaDonlinq instance);
    partial void DeleteHoaDonlinq(HoaDonlinq instance);
    partial void InsertKhachHanglinq(KhachHanglinq instance);
    partial void UpdateKhachHanglinq(KhachHanglinq instance);
    partial void DeleteKhachHanglinq(KhachHanglinq instance);
    partial void InsertLoaiHanglinq(LoaiHanglinq instance);
    partial void UpdateLoaiHanglinq(LoaiHanglinq instance);
    partial void DeleteLoaiHanglinq(LoaiHanglinq instance);
    partial void InsertLoaiKhachHanglinq(LoaiKhachHanglinq instance);
    partial void UpdateLoaiKhachHanglinq(LoaiKhachHanglinq instance);
    partial void DeleteLoaiKhachHanglinq(LoaiKhachHanglinq instance);
    partial void InsertNhaCungCapLinq(NhaCungCapLinq instance);
    partial void UpdateNhaCungCapLinq(NhaCungCapLinq instance);
    partial void DeleteNhaCungCapLinq(NhaCungCapLinq instance);
    partial void InsertTaiKhoanlinq(TaiKhoanlinq instance);
    partial void UpdateTaiKhoanlinq(TaiKhoanlinq instance);
    partial void DeleteTaiKhoanlinq(TaiKhoanlinq instance);
    #endregion
		
		public DatabaseDataContext() : 
				base(global::DAL.Properties.Settings.Default.CSDLNhaHangConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietHoaDonlinq> ChiTietHoaDonlinqs
		{
			get
			{
				return this.GetTable<ChiTietHoaDonlinq>();
			}
		}
		
		public System.Data.Linq.Table<NhanVienlinq> NhanVienlinqs
		{
			get
			{
				return this.GetTable<NhanVienlinq>();
			}
		}
		
		public System.Data.Linq.Table<HangLinq> HangLinqs
		{
			get
			{
				return this.GetTable<HangLinq>();
			}
		}
		
		public System.Data.Linq.Table<HoaDonlinq> HoaDonlinqs
		{
			get
			{
				return this.GetTable<HoaDonlinq>();
			}
		}
		
		public System.Data.Linq.Table<KhachHanglinq> KhachHanglinqs
		{
			get
			{
				return this.GetTable<KhachHanglinq>();
			}
		}
		
		public System.Data.Linq.Table<LoaiHanglinq> LoaiHanglinqs
		{
			get
			{
				return this.GetTable<LoaiHanglinq>();
			}
		}
		
		public System.Data.Linq.Table<LoaiKhachHanglinq> LoaiKhachHanglinqs
		{
			get
			{
				return this.GetTable<LoaiKhachHanglinq>();
			}
		}
		
		public System.Data.Linq.Table<NhaCungCapLinq> NhaCungCapLinqs
		{
			get
			{
				return this.GetTable<NhaCungCapLinq>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoanlinq> TaiKhoanlinqs
		{
			get
			{
				return this.GetTable<TaiKhoanlinq>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHoaDon")]
	public partial class ChiTietHoaDonlinq : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maHang;
		
		private int _maHoaDon;
		
		private int _soLuong;
		
		private double _thanhTien;
		
		private EntityRef<HangLinq> _Hang;
		
		private EntityRef<HoaDonlinq> _HoaDon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaHangChanging(int value);
    partial void OnmaHangChanged();
    partial void OnmaHoaDonChanging(int value);
    partial void OnmaHoaDonChanged();
    partial void OnsoLuongChanging(int value);
    partial void OnsoLuongChanged();
    partial void OnthanhTienChanging(double value);
    partial void OnthanhTienChanged();
    #endregion
		
		public ChiTietHoaDonlinq()
		{
			this._Hang = default(EntityRef<HangLinq>);
			this._HoaDon = default(EntityRef<HoaDonlinq>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maHang
		{
			get
			{
				return this._maHang;
			}
			set
			{
				if ((this._maHang != value))
				{
					if (this._Hang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaHangChanging(value);
					this.SendPropertyChanging();
					this._maHang = value;
					this.SendPropertyChanged("maHang");
					this.OnmaHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHoaDon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maHoaDon
		{
			get
			{
				return this._maHoaDon;
			}
			set
			{
				if ((this._maHoaDon != value))
				{
					if (this._HoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaHoaDonChanging(value);
					this.SendPropertyChanging();
					this._maHoaDon = value;
					this.SendPropertyChanged("maHoaDon");
					this.OnmaHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soLuong", DbType="Int NOT NULL")]
		public int soLuong
		{
			get
			{
				return this._soLuong;
			}
			set
			{
				if ((this._soLuong != value))
				{
					this.OnsoLuongChanging(value);
					this.SendPropertyChanging();
					this._soLuong = value;
					this.SendPropertyChanged("soLuong");
					this.OnsoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thanhTien", DbType="Float NOT NULL")]
		public double thanhTien
		{
			get
			{
				return this._thanhTien;
			}
			set
			{
				if ((this._thanhTien != value))
				{
					this.OnthanhTienChanging(value);
					this.SendPropertyChanging();
					this._thanhTien = value;
					this.SendPropertyChanged("thanhTien");
					this.OnthanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangLinq_ChiTietHoaDon", Storage="_Hang", ThisKey="maHang", OtherKey="maHang", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HangLinq HangLinq
		{
			get
			{
				return this._Hang.Entity;
			}
			set
			{
				HangLinq previousValue = this._Hang.Entity;
				if (((previousValue != value) 
							|| (this._Hang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hang.Entity = null;
						previousValue.ChiTietHoaDonlinqs.Remove(this);
					}
					this._Hang.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonlinqs.Add(this);
						this._maHang = value.maHang;
					}
					else
					{
						this._maHang = default(int);
					}
					this.SendPropertyChanged("HangLinq");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_ChiTietHoaDon", Storage="_HoaDon", ThisKey="maHoaDon", OtherKey="maHoaDon", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HoaDonlinq HoaDonlinq
		{
			get
			{
				return this._HoaDon.Entity;
			}
			set
			{
				HoaDonlinq previousValue = this._HoaDon.Entity;
				if (((previousValue != value) 
							|| (this._HoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDon.Entity = null;
						previousValue.ChiTietHoaDonlinqs.Remove(this);
					}
					this._HoaDon.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonlinqs.Add(this);
						this._maHoaDon = value.maHoaDon;
					}
					else
					{
						this._maHoaDon = default(int);
					}
					this.SendPropertyChanged("HoaDonlinq");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVienlinq : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maNhanVien;
		
		private string _tenNhanVien;
		
		private string _soDienThoai;
		
		private string _chungMinhThu;
		
		private string _tenTaiKhoan;
		
		private EntitySet<HoaDonlinq> _HoaDons;
		
		private EntityRef<TaiKhoanlinq> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaNhanVienChanging(int value);
    partial void OnmaNhanVienChanged();
    partial void OntenNhanVienChanging(string value);
    partial void OntenNhanVienChanged();
    partial void OnsoDienThoaiChanging(string value);
    partial void OnsoDienThoaiChanged();
    partial void OnchungMinhThuChanging(string value);
    partial void OnchungMinhThuChanged();
    partial void OntenTaiKhoanChanging(string value);
    partial void OntenTaiKhoanChanged();
    #endregion
		
		public NhanVienlinq()
		{
			this._HoaDons = new EntitySet<HoaDonlinq>(new Action<HoaDonlinq>(this.attach_HoaDons), new Action<HoaDonlinq>(this.detach_HoaDons));
			this._TaiKhoan = default(EntityRef<TaiKhoanlinq>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNhanVien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maNhanVien
		{
			get
			{
				return this._maNhanVien;
			}
			set
			{
				if ((this._maNhanVien != value))
				{
					this.OnmaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._maNhanVien = value;
					this.SendPropertyChanged("maNhanVien");
					this.OnmaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenNhanVien", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tenNhanVien
		{
			get
			{
				return this._tenNhanVien;
			}
			set
			{
				if ((this._tenNhanVien != value))
				{
					this.OntenNhanVienChanging(value);
					this.SendPropertyChanging();
					this._tenNhanVien = value;
					this.SendPropertyChanged("tenNhanVien");
					this.OntenNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soDienThoai", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string soDienThoai
		{
			get
			{
				return this._soDienThoai;
			}
			set
			{
				if ((this._soDienThoai != value))
				{
					this.OnsoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._soDienThoai = value;
					this.SendPropertyChanged("soDienThoai");
					this.OnsoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chungMinhThu", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string chungMinhThu
		{
			get
			{
				return this._chungMinhThu;
			}
			set
			{
				if ((this._chungMinhThu != value))
				{
					this.OnchungMinhThuChanging(value);
					this.SendPropertyChanging();
					this._chungMinhThu = value;
					this.SendPropertyChanged("chungMinhThu");
					this.OnchungMinhThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenTaiKhoan", DbType="VarChar(30)")]
		public string tenTaiKhoan
		{
			get
			{
				return this._tenTaiKhoan;
			}
			set
			{
				if ((this._tenTaiKhoan != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntenTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._tenTaiKhoan = value;
					this.SendPropertyChanged("tenTaiKhoan");
					this.OntenTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDon", Storage="_HoaDons", ThisKey="maNhanVien", OtherKey="maNhanVien")]
		public EntitySet<HoaDonlinq> HoaDonlinqs
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_NhanVien", Storage="_TaiKhoan", ThisKey="tenTaiKhoan", OtherKey="tenTaiKhoan", IsForeignKey=true, DeleteRule="CASCADE")]
		public TaiKhoanlinq TaiKhoanlinq
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoanlinq previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.NhanVienlinqs.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.NhanVienlinqs.Add(this);
						this._tenTaiKhoan = value.tenTaiKhoan;
					}
					else
					{
						this._tenTaiKhoan = default(string);
					}
					this.SendPropertyChanged("TaiKhoanlinq");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDonlinq entity)
		{
			this.SendPropertyChanging();
			entity.NhanVienlinq = this;
		}
		
		private void detach_HoaDons(HoaDonlinq entity)
		{
			this.SendPropertyChanging();
			entity.NhanVienlinq = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hang")]
	public partial class HangLinq : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maHang;
		
		private string _tenHang;
		
		private string _donViTinh;
		
		private double _donGia;
		
		private int _soLuongCon;
		
		private int _maLoaiHang;
		
		private int _maNhaCungCap;
		
		private EntitySet<ChiTietHoaDonlinq> _ChiTietHoaDons;
		
		private EntityRef<LoaiHanglinq> _LoaiHang;
		
		private EntityRef<NhaCungCapLinq> _NhaCungCapLinq;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaHangChanging(int value);
    partial void OnmaHangChanged();
    partial void OntenHangChanging(string value);
    partial void OntenHangChanged();
    partial void OndonViTinhChanging(string value);
    partial void OndonViTinhChanged();
    partial void OndonGiaChanging(double value);
    partial void OndonGiaChanged();
    partial void OnsoLuongConChanging(int value);
    partial void OnsoLuongConChanged();
    partial void OnmaLoaiHangChanging(int value);
    partial void OnmaLoaiHangChanged();
    partial void OnmaNhaCungCapChanging(int value);
    partial void OnmaNhaCungCapChanged();
    #endregion
		
		public HangLinq()
		{
			this._ChiTietHoaDons = new EntitySet<ChiTietHoaDonlinq>(new Action<ChiTietHoaDonlinq>(this.attach_ChiTietHoaDons), new Action<ChiTietHoaDonlinq>(this.detach_ChiTietHoaDons));
			this._LoaiHang = default(EntityRef<LoaiHanglinq>);
			this._NhaCungCapLinq = default(EntityRef<NhaCungCapLinq>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maHang
		{
			get
			{
				return this._maHang;
			}
			set
			{
				if ((this._maHang != value))
				{
					this.OnmaHangChanging(value);
					this.SendPropertyChanging();
					this._maHang = value;
					this.SendPropertyChanged("maHang");
					this.OnmaHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenHang", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tenHang
		{
			get
			{
				return this._tenHang;
			}
			set
			{
				if ((this._tenHang != value))
				{
					this.OntenHangChanging(value);
					this.SendPropertyChanging();
					this._tenHang = value;
					this.SendPropertyChanged("tenHang");
					this.OntenHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donViTinh", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string donViTinh
		{
			get
			{
				return this._donViTinh;
			}
			set
			{
				if ((this._donViTinh != value))
				{
					this.OndonViTinhChanging(value);
					this.SendPropertyChanging();
					this._donViTinh = value;
					this.SendPropertyChanged("donViTinh");
					this.OndonViTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donGia", DbType="Float NOT NULL")]
		public double donGia
		{
			get
			{
				return this._donGia;
			}
			set
			{
				if ((this._donGia != value))
				{
					this.OndonGiaChanging(value);
					this.SendPropertyChanging();
					this._donGia = value;
					this.SendPropertyChanged("donGia");
					this.OndonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soLuongCon", DbType="Int NOT NULL")]
		public int soLuongCon
		{
			get
			{
				return this._soLuongCon;
			}
			set
			{
				if ((this._soLuongCon != value))
				{
					this.OnsoLuongConChanging(value);
					this.SendPropertyChanging();
					this._soLuongCon = value;
					this.SendPropertyChanged("soLuongCon");
					this.OnsoLuongConChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maLoaiHang", DbType="Int NOT NULL")]
		public int maLoaiHang
		{
			get
			{
				return this._maLoaiHang;
			}
			set
			{
				if ((this._maLoaiHang != value))
				{
					if (this._LoaiHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaLoaiHangChanging(value);
					this.SendPropertyChanging();
					this._maLoaiHang = value;
					this.SendPropertyChanged("maLoaiHang");
					this.OnmaLoaiHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNhaCungCap", DbType="Int NOT NULL")]
		public int maNhaCungCap
		{
			get
			{
				return this._maNhaCungCap;
			}
			set
			{
				if ((this._maNhaCungCap != value))
				{
					if (this._NhaCungCapLinq.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaNhaCungCapChanging(value);
					this.SendPropertyChanging();
					this._maNhaCungCap = value;
					this.SendPropertyChanged("maNhaCungCap");
					this.OnmaNhaCungCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangLinq_ChiTietHoaDon", Storage="_ChiTietHoaDons", ThisKey="maHang", OtherKey="maHang")]
		public EntitySet<ChiTietHoaDonlinq> ChiTietHoaDonlinqs
		{
			get
			{
				return this._ChiTietHoaDons;
			}
			set
			{
				this._ChiTietHoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiHang_HangLinq", Storage="_LoaiHang", ThisKey="maLoaiHang", OtherKey="maLoaiHang", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LoaiHanglinq LoaiHanglinq
		{
			get
			{
				return this._LoaiHang.Entity;
			}
			set
			{
				LoaiHanglinq previousValue = this._LoaiHang.Entity;
				if (((previousValue != value) 
							|| (this._LoaiHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiHang.Entity = null;
						previousValue.HangLinqs.Remove(this);
					}
					this._LoaiHang.Entity = value;
					if ((value != null))
					{
						value.HangLinqs.Add(this);
						this._maLoaiHang = value.maLoaiHang;
					}
					else
					{
						this._maLoaiHang = default(int);
					}
					this.SendPropertyChanged("LoaiHanglinq");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCapLinq_HangLinq", Storage="_NhaCungCapLinq", ThisKey="maNhaCungCap", OtherKey="maNhaCungCap", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NhaCungCapLinq NhaCungCapLinq
		{
			get
			{
				return this._NhaCungCapLinq.Entity;
			}
			set
			{
				NhaCungCapLinq previousValue = this._NhaCungCapLinq.Entity;
				if (((previousValue != value) 
							|| (this._NhaCungCapLinq.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCungCapLinq.Entity = null;
						previousValue.HangLinqs.Remove(this);
					}
					this._NhaCungCapLinq.Entity = value;
					if ((value != null))
					{
						value.HangLinqs.Add(this);
						this._maNhaCungCap = value.maNhaCungCap;
					}
					else
					{
						this._maNhaCungCap = default(int);
					}
					this.SendPropertyChanged("NhaCungCapLinq");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDons(ChiTietHoaDonlinq entity)
		{
			this.SendPropertyChanging();
			entity.HangLinq = this;
		}
		
		private void detach_ChiTietHoaDons(ChiTietHoaDonlinq entity)
		{
			this.SendPropertyChanging();
			entity.HangLinq = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDonlinq : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maHoaDon;
		
		private System.DateTime _ngayGioTao;
		
		private int _maKhachHang;
		
		private int _maNhanVien;
		
		private EntitySet<ChiTietHoaDonlinq> _ChiTietHoaDons;
		
		private EntityRef<NhanVienlinq> _NhanVien;
		
		private EntityRef<KhachHanglinq> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaHoaDonChanging(int value);
    partial void OnmaHoaDonChanged();
    partial void OnngayGioTaoChanging(System.DateTime value);
    partial void OnngayGioTaoChanged();
    partial void OnmaKhachHangChanging(int value);
    partial void OnmaKhachHangChanged();
    partial void OnmaNhanVienChanging(int value);
    partial void OnmaNhanVienChanged();
    #endregion
		
		public HoaDonlinq()
		{
			this._ChiTietHoaDons = new EntitySet<ChiTietHoaDonlinq>(new Action<ChiTietHoaDonlinq>(this.attach_ChiTietHoaDons), new Action<ChiTietHoaDonlinq>(this.detach_ChiTietHoaDons));
			this._NhanVien = default(EntityRef<NhanVienlinq>);
			this._KhachHang = default(EntityRef<KhachHanglinq>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHoaDon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maHoaDon
		{
			get
			{
				return this._maHoaDon;
			}
			set
			{
				if ((this._maHoaDon != value))
				{
					this.OnmaHoaDonChanging(value);
					this.SendPropertyChanging();
					this._maHoaDon = value;
					this.SendPropertyChanged("maHoaDon");
					this.OnmaHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayGioTao", DbType="DateTime NOT NULL")]
		public System.DateTime ngayGioTao
		{
			get
			{
				return this._ngayGioTao;
			}
			set
			{
				if ((this._ngayGioTao != value))
				{
					this.OnngayGioTaoChanging(value);
					this.SendPropertyChanging();
					this._ngayGioTao = value;
					this.SendPropertyChanged("ngayGioTao");
					this.OnngayGioTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKhachHang", DbType="Int NOT NULL")]
		public int maKhachHang
		{
			get
			{
				return this._maKhachHang;
			}
			set
			{
				if ((this._maKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._maKhachHang = value;
					this.SendPropertyChanged("maKhachHang");
					this.OnmaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNhanVien", DbType="Int NOT NULL")]
		public int maNhanVien
		{
			get
			{
				return this._maNhanVien;
			}
			set
			{
				if ((this._maNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._maNhanVien = value;
					this.SendPropertyChanged("maNhanVien");
					this.OnmaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_ChiTietHoaDon", Storage="_ChiTietHoaDons", ThisKey="maHoaDon", OtherKey="maHoaDon")]
		public EntitySet<ChiTietHoaDonlinq> ChiTietHoaDonlinqs
		{
			get
			{
				return this._ChiTietHoaDons;
			}
			set
			{
				this._ChiTietHoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDon", Storage="_NhanVien", ThisKey="maNhanVien", OtherKey="maNhanVien", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NhanVienlinq NhanVienlinq
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVienlinq previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HoaDonlinqs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HoaDonlinqs.Add(this);
						this._maNhanVien = value.maNhanVien;
					}
					else
					{
						this._maNhanVien = default(int);
					}
					this.SendPropertyChanged("NhanVienlinq");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDon", Storage="_KhachHang", ThisKey="maKhachHang", OtherKey="maKhachHang", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public KhachHanglinq KhachHanglinq
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHanglinq previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.HoaDonlinqs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.HoaDonlinqs.Add(this);
						this._maKhachHang = value.maKhachHang;
					}
					else
					{
						this._maKhachHang = default(int);
					}
					this.SendPropertyChanged("KhachHanglinq");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDons(ChiTietHoaDonlinq entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonlinq = this;
		}
		
		private void detach_ChiTietHoaDons(ChiTietHoaDonlinq entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonlinq = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHanglinq : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maKhachHang;
		
		private string _hoten;
		
		private string _diaChi;
		
		private string _soDienThoai;
		
		private int _maLoaiKhachHang;
		
		private EntitySet<HoaDonlinq> _HoaDons;
		
		private EntityRef<LoaiKhachHanglinq> _LoaiKhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaKhachHangChanging(int value);
    partial void OnmaKhachHangChanged();
    partial void OnhotenChanging(string value);
    partial void OnhotenChanged();
    partial void OndiaChiChanging(string value);
    partial void OndiaChiChanged();
    partial void OnsoDienThoaiChanging(string value);
    partial void OnsoDienThoaiChanged();
    partial void OnmaLoaiKhachHangChanging(int value);
    partial void OnmaLoaiKhachHangChanged();
    #endregion
		
		public KhachHanglinq()
		{
			this._HoaDons = new EntitySet<HoaDonlinq>(new Action<HoaDonlinq>(this.attach_HoaDons), new Action<HoaDonlinq>(this.detach_HoaDons));
			this._LoaiKhachHang = default(EntityRef<LoaiKhachHanglinq>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKhachHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maKhachHang
		{
			get
			{
				return this._maKhachHang;
			}
			set
			{
				if ((this._maKhachHang != value))
				{
					this.OnmaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._maKhachHang = value;
					this.SendPropertyChanged("maKhachHang");
					this.OnmaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string hoten
		{
			get
			{
				return this._hoten;
			}
			set
			{
				if ((this._hoten != value))
				{
					this.OnhotenChanging(value);
					this.SendPropertyChanging();
					this._hoten = value;
					this.SendPropertyChanged("hoten");
					this.OnhotenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diaChi", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string diaChi
		{
			get
			{
				return this._diaChi;
			}
			set
			{
				if ((this._diaChi != value))
				{
					this.OndiaChiChanging(value);
					this.SendPropertyChanging();
					this._diaChi = value;
					this.SendPropertyChanged("diaChi");
					this.OndiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soDienThoai", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string soDienThoai
		{
			get
			{
				return this._soDienThoai;
			}
			set
			{
				if ((this._soDienThoai != value))
				{
					this.OnsoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._soDienThoai = value;
					this.SendPropertyChanged("soDienThoai");
					this.OnsoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maLoaiKhachHang", DbType="Int NOT NULL")]
		public int maLoaiKhachHang
		{
			get
			{
				return this._maLoaiKhachHang;
			}
			set
			{
				if ((this._maLoaiKhachHang != value))
				{
					if (this._LoaiKhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaLoaiKhachHangChanging(value);
					this.SendPropertyChanging();
					this._maLoaiKhachHang = value;
					this.SendPropertyChanged("maLoaiKhachHang");
					this.OnmaLoaiKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDon", Storage="_HoaDons", ThisKey="maKhachHang", OtherKey="maKhachHang")]
		public EntitySet<HoaDonlinq> HoaDonlinqs
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiKhachHang_KhachHang", Storage="_LoaiKhachHang", ThisKey="maLoaiKhachHang", OtherKey="maLoaiKhachHang", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LoaiKhachHanglinq LoaiKhachHanglinq
		{
			get
			{
				return this._LoaiKhachHang.Entity;
			}
			set
			{
				LoaiKhachHanglinq previousValue = this._LoaiKhachHang.Entity;
				if (((previousValue != value) 
							|| (this._LoaiKhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiKhachHang.Entity = null;
						previousValue.KhachHanglinqs.Remove(this);
					}
					this._LoaiKhachHang.Entity = value;
					if ((value != null))
					{
						value.KhachHanglinqs.Add(this);
						this._maLoaiKhachHang = value.maLoaiKhachHang;
					}
					else
					{
						this._maLoaiKhachHang = default(int);
					}
					this.SendPropertyChanged("LoaiKhachHanglinq");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDonlinq entity)
		{
			this.SendPropertyChanging();
			entity.KhachHanglinq = this;
		}
		
		private void detach_HoaDons(HoaDonlinq entity)
		{
			this.SendPropertyChanging();
			entity.KhachHanglinq = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiHang")]
	public partial class LoaiHanglinq : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maLoaiHang;
		
		private string _tenLoaiHang;
		
		private EntitySet<HangLinq> _Hangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaLoaiHangChanging(int value);
    partial void OnmaLoaiHangChanged();
    partial void OntenLoaiHangChanging(string value);
    partial void OntenLoaiHangChanged();
    #endregion
		
		public LoaiHanglinq()
		{
			this._Hangs = new EntitySet<HangLinq>(new Action<HangLinq>(this.attach_Hangs), new Action<HangLinq>(this.detach_Hangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maLoaiHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maLoaiHang
		{
			get
			{
				return this._maLoaiHang;
			}
			set
			{
				if ((this._maLoaiHang != value))
				{
					this.OnmaLoaiHangChanging(value);
					this.SendPropertyChanging();
					this._maLoaiHang = value;
					this.SendPropertyChanged("maLoaiHang");
					this.OnmaLoaiHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenLoaiHang", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tenLoaiHang
		{
			get
			{
				return this._tenLoaiHang;
			}
			set
			{
				if ((this._tenLoaiHang != value))
				{
					this.OntenLoaiHangChanging(value);
					this.SendPropertyChanging();
					this._tenLoaiHang = value;
					this.SendPropertyChanged("tenLoaiHang");
					this.OntenLoaiHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiHang_HangLinq", Storage="_Hangs", ThisKey="maLoaiHang", OtherKey="maLoaiHang")]
		public EntitySet<HangLinq> HangLinqs
		{
			get
			{
				return this._Hangs;
			}
			set
			{
				this._Hangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hangs(HangLinq entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHanglinq = this;
		}
		
		private void detach_Hangs(HangLinq entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHanglinq = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiKhachHang")]
	public partial class LoaiKhachHanglinq : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maLoaiKhachHang;
		
		private string _tenLoaiKhachHang;
		
		private EntitySet<KhachHanglinq> _KhachHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaLoaiKhachHangChanging(int value);
    partial void OnmaLoaiKhachHangChanged();
    partial void OntenLoaiKhachHangChanging(string value);
    partial void OntenLoaiKhachHangChanged();
    #endregion
		
		public LoaiKhachHanglinq()
		{
			this._KhachHangs = new EntitySet<KhachHanglinq>(new Action<KhachHanglinq>(this.attach_KhachHangs), new Action<KhachHanglinq>(this.detach_KhachHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maLoaiKhachHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maLoaiKhachHang
		{
			get
			{
				return this._maLoaiKhachHang;
			}
			set
			{
				if ((this._maLoaiKhachHang != value))
				{
					this.OnmaLoaiKhachHangChanging(value);
					this.SendPropertyChanging();
					this._maLoaiKhachHang = value;
					this.SendPropertyChanged("maLoaiKhachHang");
					this.OnmaLoaiKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenLoaiKhachHang", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tenLoaiKhachHang
		{
			get
			{
				return this._tenLoaiKhachHang;
			}
			set
			{
				if ((this._tenLoaiKhachHang != value))
				{
					this.OntenLoaiKhachHangChanging(value);
					this.SendPropertyChanging();
					this._tenLoaiKhachHang = value;
					this.SendPropertyChanged("tenLoaiKhachHang");
					this.OntenLoaiKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiKhachHang_KhachHang", Storage="_KhachHangs", ThisKey="maLoaiKhachHang", OtherKey="maLoaiKhachHang")]
		public EntitySet<KhachHanglinq> KhachHanglinqs
		{
			get
			{
				return this._KhachHangs;
			}
			set
			{
				this._KhachHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhachHangs(KhachHanglinq entity)
		{
			this.SendPropertyChanging();
			entity.LoaiKhachHanglinq = this;
		}
		
		private void detach_KhachHangs(KhachHanglinq entity)
		{
			this.SendPropertyChanging();
			entity.LoaiKhachHanglinq = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCungCap")]
	public partial class NhaCungCapLinq : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maNhaCungCap;
		
		private string _tenNhaCungCap;
		
		private string _diaChi;
		
		private EntitySet<HangLinq> _Hangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaNhaCungCapChanging(int value);
    partial void OnmaNhaCungCapChanged();
    partial void OntenNhaCungCapChanging(string value);
    partial void OntenNhaCungCapChanged();
    partial void OndiaChiChanging(string value);
    partial void OndiaChiChanged();
    #endregion
		
		public NhaCungCapLinq()
		{
			this._Hangs = new EntitySet<HangLinq>(new Action<HangLinq>(this.attach_Hangs), new Action<HangLinq>(this.detach_Hangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNhaCungCap", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maNhaCungCap
		{
			get
			{
				return this._maNhaCungCap;
			}
			set
			{
				if ((this._maNhaCungCap != value))
				{
					this.OnmaNhaCungCapChanging(value);
					this.SendPropertyChanging();
					this._maNhaCungCap = value;
					this.SendPropertyChanged("maNhaCungCap");
					this.OnmaNhaCungCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenNhaCungCap", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tenNhaCungCap
		{
			get
			{
				return this._tenNhaCungCap;
			}
			set
			{
				if ((this._tenNhaCungCap != value))
				{
					this.OntenNhaCungCapChanging(value);
					this.SendPropertyChanging();
					this._tenNhaCungCap = value;
					this.SendPropertyChanged("tenNhaCungCap");
					this.OntenNhaCungCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diaChi", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string diaChi
		{
			get
			{
				return this._diaChi;
			}
			set
			{
				if ((this._diaChi != value))
				{
					this.OndiaChiChanging(value);
					this.SendPropertyChanging();
					this._diaChi = value;
					this.SendPropertyChanged("diaChi");
					this.OndiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCapLinq_HangLinq", Storage="_Hangs", ThisKey="maNhaCungCap", OtherKey="maNhaCungCap")]
		public EntitySet<HangLinq> HangLinqs
		{
			get
			{
				return this._Hangs;
			}
			set
			{
				this._Hangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hangs(HangLinq entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCapLinq = this;
		}
		
		private void detach_Hangs(HangLinq entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCapLinq = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoanlinq : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _tenTaiKhoan;
		
		private string _matKhau;
		
		private string _quyen;
		
		private EntitySet<NhanVienlinq> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntenTaiKhoanChanging(string value);
    partial void OntenTaiKhoanChanged();
    partial void OnmatKhauChanging(string value);
    partial void OnmatKhauChanged();
    partial void OnquyenChanging(string value);
    partial void OnquyenChanged();
    #endregion
		
		public TaiKhoanlinq()
		{
			this._NhanViens = new EntitySet<NhanVienlinq>(new Action<NhanVienlinq>(this.attach_NhanViens), new Action<NhanVienlinq>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenTaiKhoan", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string tenTaiKhoan
		{
			get
			{
				return this._tenTaiKhoan;
			}
			set
			{
				if ((this._tenTaiKhoan != value))
				{
					this.OntenTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._tenTaiKhoan = value;
					this.SendPropertyChanged("tenTaiKhoan");
					this.OntenTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matKhau", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string matKhau
		{
			get
			{
				return this._matKhau;
			}
			set
			{
				if ((this._matKhau != value))
				{
					this.OnmatKhauChanging(value);
					this.SendPropertyChanging();
					this._matKhau = value;
					this.SendPropertyChanged("matKhau");
					this.OnmatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quyen", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string quyen
		{
			get
			{
				return this._quyen;
			}
			set
			{
				if ((this._quyen != value))
				{
					this.OnquyenChanging(value);
					this.SendPropertyChanging();
					this._quyen = value;
					this.SendPropertyChanged("quyen");
					this.OnquyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_NhanVien", Storage="_NhanViens", ThisKey="tenTaiKhoan", OtherKey="tenTaiKhoan")]
		public EntitySet<NhanVienlinq> NhanVienlinqs
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVienlinq entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoanlinq = this;
		}
		
		private void detach_NhanViens(NhanVienlinq entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoanlinq = null;
		}
	}
}
#pragma warning restore 1591
